#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


# ls -R $BUILD_DIR/.apt/
# ls -l $BUILD_DIR/.apt/usr/share/
cp -r /usr/share/cmake-3.22 $BUILD_DIR/.apt/usr/share/cmake-3.22
echo "---> copied"

mkdir -p $BUILD_DIR/.tdlib

git clone https://github.com/tdlib/td.git $BUILD_DIR/.tdlib
cd $BUILD_DIR/.tdlib
rm -rf build
mkdir build
cd build
export CXXFLAGS="-stdlib=libc++"

#echo $CMAKE_ROOT
#export CMAKE_ROOT=/usr/share/cmake-3.22

CC=$BUILD_DIR/.apt/usr/bin/clang CXX=$BUILD_DIR/.apt/usr/bin/clang++ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=../tdlib ..
cmake --build . --target prepare_cross_compiling
cd ..
php SplitSource.php
cd build
cmake --build . --target install
cd ..
php SplitSource.php --undo
cd ..
ls -l td/tdlib
